---
- hosts: localhost

  tasks:
    - set_fact:
       id: "{{ range(10000, 99999) | random }}"

    - name: Clone ubuntu-20.04-server template
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_details.api_user }}"
        api_password: "{{ proxmox_details.api_password }}"
        api_host: "{{ proxmox_details.host_ip }}"
        clone: ubuntu-20.04-server
        name: k8s-node-{{ id }}
        node: "{{ proxmox_details.node }}"
        storage: "{{ proxmox_details.storage }}"
      register: new_vm
    
    - name: Get new VM's id
      set_fact:
        vmid: "{{ new_vm.msg | regex_replace('.*newid ') | regex_replace(' cloned.*') }}"

    - name: Start VM
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_details.api_user }}"
        api_password: "{{ proxmox_details.api_password }}"
        api_host: "{{ proxmox_details.host_ip }}"
        node: "{{ proxmox_details.node }}"
        vmid: "{{ vmid }}"
        state: started

    - name: Set groups
      community.general.proxmox_kvm:
        api_user: "{{ proxmox_details.api_user }}"
        api_password: "{{ proxmox_details.api_password }}"
        api_host: "{{ proxmox_details.host_ip }}"
        node: "{{ proxmox_details.node }}"
        vmid: "{{ vmid }}"
        description: "{\"groups\": [\"kube-node\"]}"
        update: true

    - name: Add Proxmox host to inventory
      add_host:
        hostname: '{{ proxmox_details.host_ip }}'
        ansible_port: '{{ proxmox_details.host_ssh_port }}'

    - name: Fix broken VM boot order to not reboot to PXE. Must be run after first VM boot.
      shell: "qm set {{ vmid }} --boot order=scsi0"
      vars:
        ansible_become_password: "{{ proxmox_details.api_password }}"
      become: yes
      become_user: root
      delegate_to: '{{ proxmox_details.host_ip }}'
      delegate_facts: false
